name: Run python linters

on:
  pull_request:
    branches:
      - master
    paths:
      - '**/*.py'

jobs:
  lint-python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
         python-version: '3.11.1'
    - name: Install dependencies
      working-directory: api
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Run linters
      working-directory: api
      run: |
        isort --check .
        # pylama
        # black --check .
  test-python:
      needs: lint-python
      runs-on: ubuntu-latest

      env:
        FOOBAR_POSTGRES_USER: postgres
        FOOBAR_POSTGRES_PASSWORD: 1234
        # FOOBAR_POSTGRES_HOST: localhost
        FOOBAR_POSTGRES_DB: foobar_db
        # FOOBAR_POSTGRES_PORT: 5432

        # FOOBAR_SECRET_KEY: test-key
      services:
        postgres_main:
          image: postgres:12
          env:
            POSTGRES_USER: ${{ env.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
            POSTGRES_DB: ${{ env.POSTGRES_DB }}
          ports:
            - 5432:5432
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: Setup Python
          uses: actions/setup-python@v4
          with:
            python-version: "3.11.1"
        - name: Install requirements
          working-directory: api
          run: |
            pip install -r requirements-dev.txt
        - name: Run Tests
          working-directory: api
        - name: Prepare env
          working-directory: api
          run: cp .example.env .env
          # env:
          #   DEBUG: "0"
          #   FOOBAR_SECRET_KEY: ${{ env.DJANGO_SECRET_KEY }}
          #   DB_USERNAME: ${{ env.POSTGRES_USER }}
          #   DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          #   DB_HOST: ${{ env.POSTGRES_HOST }}
          #   DB_DATABASE: ${{ env.POSTGRES_DB }}
          #   DB_PORT: ${{ env.POSTGRES_PORT }}
          run: |
            pytest --no-migrations --cache-clear
